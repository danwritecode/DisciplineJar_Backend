AWSTemplateFormatVersion: '2010-09-09'
Resources:
  APIGateway:
    Properties:
      Cors: '''*'''
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://discjarswaggertemplate/swagger.yaml
      EndpointConfiguration: REGIONAL
      Name: DisciplineJar
      StageName: Prod
    Type: AWS::Serverless::Api
  Content:
    Properties:
      PrimaryKey:
        Name: Content_Id
        Type: String
      TableName: Content
    Type: AWS::Serverless::SimpleTable
  DynamoCognitoFullAccess:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
      Path: /
      RoleName: Dynamo_Cognito_FullAccess
    Type: AWS::IAM::Role
  DynamoDBFullControl:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Path: /
      RoleName: DynamoDB_FullControl
    Type: AWS::IAM::Role
  User:
    Properties:
      PrimaryKey:
        Name: Phone_Num
        Type: String
      TableName: User
    Type: AWS::Serverless::SimpleTable
  UserReadDoesUserExist:
    Properties:
      CodeUri: s3://discjarsambuild/1c8f659134cf3b7a435d99a5a0c176d5
      Description: A function that returns whether or not a user exists already.
      Events:
        DiscJarAPI:
          Properties:
            Auth:
              Authorizer: None
            Method: GET
            Path: /user/exists
            RestApiId:
              Ref: APIGateway
          Type: Api
      FunctionName: User_Read_DoesUserExist
      Handler: lambda_function.lambda_handler
      MemorySize: 768
      Role:
        Fn::GetAtt:
        - DynamoDBFullControl
        - Arn
      Runtime: python3.7
      Tags:
        Destination: DynamoDB
        Entity: User
        Operation: Read
        Trigger: API Gateway
      Timeout: 10
    Type: AWS::Serverless::Function
  UserReadSettings:
    Properties:
      CodeUri: s3://discjarsambuild/39a40cc4dc6256cb7b36a161aec76239
      Description: A function that writes User Settings to DynamoDB
      Events:
        DiscJarAPI:
          Properties:
            Auth:
              Authorizer: None
            Method: GET
            Path: /user/settings
            RestApiId:
              Ref: APIGateway
          Type: Api
      FunctionName: User_Read_Settings
      Handler: lambda_function.lambda_handler
      MemorySize: 768
      Role:
        Fn::GetAtt:
        - DynamoDBFullControl
        - Arn
      Runtime: python3.7
      Tags:
        Destination: DynamoDB
        Entity: User
        Operation: Read
        Trigger: API Gateway
      Timeout: 10
    Type: AWS::Serverless::Function
  UserWriteSettings:
    Properties:
      CodeUri: s3://discjarsambuild/e541a8090b37c266a06a0b77c40d124c
      Description: A function that writes User Settings to DynamoDB
      Events:
        DiscJarAPI:
          Properties:
            Auth:
              Authorizer: None
            Method: POST
            Path: /user/settings
            RestApiId:
              Ref: APIGateway
          Type: Api
      FunctionName: User_Write_Settings
      Handler: lambda_function.lambda_handler
      MemorySize: 768
      Role:
        Fn::GetAtt:
        - DynamoDBFullControl
        - Arn
      Runtime: python3.7
      Tags:
        Destination: DynamoDB
        Entity: User
        Operation: Write
        Trigger: API Gateway
      Timeout: 10
    Type: AWS::Serverless::Function
  UserWriteSignup:
    Properties:
      CodeUri: s3://discjarsambuild/91d559bbdeb1adb09f48a13cec642903
      Description: A function that is triggered by API gateway and writes a user to
        the user table.
      Events:
        DiscJarAPI:
          Properties:
            Auth:
              Authorizer: None
            Method: POST
            Path: /user/signup
            RestApiId:
              Ref: APIGateway
          Type: Api
      FunctionName: User_Write_Signup
      Handler: lambda_function.lambda_handler
      MemorySize: 768
      Role:
        Fn::GetAtt:
        - DynamoDBFullControl
        - Arn
      Runtime: python3.7
      Tags:
        Destination: DynamoDB
        Entity: User
        Operation: Write
        Trigger: API Gateway
      Timeout: 10
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
